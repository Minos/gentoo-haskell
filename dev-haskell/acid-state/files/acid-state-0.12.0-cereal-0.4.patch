diff --git a/src/Data/Acid/Archive.hs b/src/Data/Acid/Archive.hs
index 9b6bb9d..da14106 100644
--- a/src/Data/Acid/Archive.hs
+++ b/src/Data/Acid/Archive.hs
@@ -1,4 +1,5 @@
 {-# LANGUAGE DoAndIfThenElse #-}
+{-# LANGUAGE CPP #-}
 {-
 Format:
  |content length| crc16   | content |
@@ -62,7 +63,11 @@ readEntries bs
                   Serialize.Done entry rest
                       | Strict.null rest    -> Next entry (worker more)
                       | otherwise           -> Next entry (worker (rest:more))
+#if MIN_VERSION_cereal(0,4,0)
+                  Serialize.Fail msg _      -> Fail msg
+#else
                   Serialize.Fail msg        -> Fail msg
+#endif
                   Serialize.Partial cont    -> case more of
                                                  []     -> check (cont Strict.empty) []
                                                  (x:xs) -> check (cont x) xs
diff --git a/src/Data/Acid/Remote.hs b/src/Data/Acid/Remote.hs
index 39c0e59..6972e30 100644
--- a/src/Data/Acid/Remote.hs
+++ b/src/Data/Acid/Remote.hs
@@ -310,7 +310,11 @@ process CommChannel{..} acidState
        worker chan (runGetPartial get Strict.empty)
   where worker chan inp
           = case inp of
+#if MIN_VERSION_cereal(0,4,0)
+              Fail msg _    -> throwIO (SerializeError msg)
+#else
               Fail msg      -> throwIO (SerializeError msg)
+#endif
               Partial cont  -> do bs <- ccGetSome 1024
                                   worker chan (cont bs)
               Done cmd rest -> do processCommand chan cmd; worker chan (runGetPartial get rest)
@@ -414,7 +418,11 @@ processRemoteState reconnect
                  getResponse leftover =
                      do debugStrLn $ "listener: listening for Response."
                         let go inp = case inp of
+#if MIN_VERSION_cereal(0,4,0)
+                                   Fail msg _     -> error msg
+#else
                                    Fail msg       -> error msg
+#endif
                                    Partial cont   -> do debugStrLn $ "listener: ccGetSome"
                                                         bs <- ccGetSome cc 1024
                                                         go (cont bs)
